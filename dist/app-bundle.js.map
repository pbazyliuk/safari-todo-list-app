{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/models/todo.js","src/resources/index.js","src/services/inmemory-todo-service.js","src/utils/idgenerator.js","styles.scss"],"names":["App","InMemoryTodoService","appName","todoTitle","activeFilter","filterTodos","console","log","todos","addTodo","removeTodo","todo","deleteTodoById","id","updateTodo","isEditMode","updateTodoById","filterCriteria","getTodosCount","filter","length","checkIfAllTodosAreCompleted","every","completed","toggleAllTodos","completeAllTodos","removeCompletedTodos","removeAllTodos","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Todo","title","getNextId","config","getAllTodos","getTodoById","pop","push","values","Object","assign","t","forEach","splice","_IdGenerator","IdGenerator"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Todo } from \"./models/todo\";\nimport { InMemoryTodoService } from \"./services/inmemory-todo-service\";\nimport { inject } from \"aurelia-framework\";\n\n@inject(InMemoryTodoService)\nexport class App {\n  constructor(InMemoryTodoService) {\n    this.InMemoryTodoService = InMemoryTodoService;\n    this.appName = \"Todo List\";\n    this.todoTitle = \"\";\n    this.activeFilter = \"all\";\n    // this.todos = this.InMemoryTodoService.getAllTodos();\n    this.filterTodos(this.activeFilter);\n    console.log(this.todos);\n  }\n\n  addTodo() {\n    this.InMemoryTodoService.addTodo(new Todo(this.todoTitle, false));\n    this.todoTitle = \"\";\n    this.filterTodos(this.activeFilter);\n    console.log(this.todos);\n  }\n\n  removeTodo(todo) {\n    console.log(\"remove\");\n    this.InMemoryTodoService.deleteTodoById(todo.id);\n    this.filterTodos(this.activeFilter);\n  }\n\n  updateTodo(todo) {\n    if (todo.isEditMode) {\n      todo.isEditMode = false;\n      this.InMemoryTodoService.updateTodoById(todo.id, todo);\n    } else {\n      todo.isEditMode = true;\n    }\n  }\n\n  filterTodos(filterCriteria) {\n    this.activeFilter = filterCriteria;\n    this.todos = this.InMemoryTodoService.filterTodos(this.activeFilter);\n  }\n\n  getTodosCount(filter) {\n    return this.InMemoryTodoService.filterTodos(filter).length;\n  }\n\n  get allTodosCount() {\n    return this.getTodosCount(\"all\");\n  }\n\n  get activeTodosCount() {\n    return this.getTodosCount(\"active\");\n  }\n\n  get completedTodosCount() {\n    return this.getTodosCount(\"completed\");\n  }\n\n  checkIfAllTodosAreCompleted() {\n    return this.todos.every(todo => todo.completed);\n  }\n\n  toggleAllTodos() {\n    this.InMemoryTodoService.toggleAllTodos();\n    this.filterTodos(this.activeFilter);\n  }\n\n  completeAllTodos() {\n    this.InMemoryTodoService.completeAllTodos();\n    this.checkIfAllTodosAreCompleted();\n    this.filterTodos(this.activeFilter);\n  }\n\n  removeCompletedTodos() {\n    this.InMemoryTodoService.removeCompletedTodos();\n    this.filterTodos(this.activeFilter);\n  }\n\n  removeAllTodos() {\n    this.InMemoryTodoService.removeAllTodos();\n    this.filterTodos(this.activeFilter);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { IdGenerator } from \"../utils/idgenerator\";\r\n\r\nexport class Todo {\r\n  constructor(title, completed = false) {\r\n    this.id = IdGenerator.getNextId();\r\n    this.title = title;\r\n    this.completed = completed;\r\n  }\r\n}\r\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class InMemoryTodoService {\r\n  todos = [];\r\n\r\n  constructor() {}\r\n\r\n  getAllTodos() {\r\n    return this.todos;\r\n  }\r\n\r\n  getTodoById(id) {\r\n    return this.todos.filter(todo => todo.id === id).pop();\r\n  }\r\n\r\n  addTodo(todo) {\r\n    this.todos.push(todo);\r\n    return this;\r\n  }\r\n\r\n  deleteTodoById(id) {\r\n    this.todos = this.todos.filter(todo => todo.id !== id);\r\n    return this;\r\n  }\r\n\r\n  updateTodoById(id, values = {}) {\r\n    let todo = this.getTodoById(id);\r\n    if (!todo) {\r\n      return null;\r\n    }\r\n    Object.assign(todo, values);\r\n    return todo;\r\n  }\r\n\r\n  filterTodos(filterCriteria) {\r\n    switch (filterCriteria) {\r\n      case \"active\":\r\n        return this.todos.filter(t => !t.completed);\r\n      case \"completed\":\r\n        return this.todos.filter(t => t.completed);\r\n      case \"all\":\r\n      default:\r\n        return this.todos;\r\n    }\r\n  }\r\n\r\n  toggleAllTodos() {\r\n    this.todos.forEach(t => (t.completed = !t.completed));\r\n  }\r\n\r\n  completeAllTodos() {\r\n    this.todos.forEach(t => (t.completed = true));\r\n  }\r\n\r\n  removeAllTodos() {\r\n    this.todos.splice(0);\r\n  }\r\n\r\n  removeCompletedTodos() {\r\n    this.todos = this.todos.filter(todo => !todo.completed);\r\n  }\r\n}\r\n","class _IdGenerator {\r\n  constructor() {\r\n    this.id = 0;\r\n  }\r\n\r\n  getNextId() {\r\n    return ++this.id;\r\n  }\r\n}\r\n\r\nexport let IdGenerator = new _IdGenerator();\r\n","$padding: 10px;\r\n\r\nul {\r\n  padding-left: $padding;\r\n}\r\n\r\nli {\r\n  list-style-type: none;\r\n}\r\n\r\n.strikeOut {\r\n  text-decoration: line-through;\r\n}\r\n"],"sourceRoot":".."}