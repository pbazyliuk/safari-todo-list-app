{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/models/todo.js","src/resources/index.js","src/services/inmemory-todo-service.js","src/utils/idgenerator.js","src/services/inmemory-todo-promise-service.js","styles.scss"],"names":["App","appName","todoTitle","activeFilter","todoService","filterTodos","filterCriteria","todos","filterTodosSync","addTodo","then","console","log","addedTodo","removeTodo","todo","deleteTodoById","id","deletedTodo","catch","error","updateTodo","editMode","updateTodoById","updatedTodo","checkIfAllTodosAreCompleted","every","completed","toggleAllTodos","result","completeAllTodos","removeAllTodos","removeCompletedTodos","length","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","Todo","title","getNextId","config","InMemoryTodoService","getAllTodos","getTodoById","filter","pop","push","values","Object","assign","t","forEach","splice","_IdGenerator","IdGenerator","InMemoryTodoPromiseService","latency","isRequesting","Promise","setTimeout","resolve","found","JSON","parse","stringify","instance","reject","Error","ex","toggleTodoCompleted"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Todo } from \"./models/todo\";\nimport { InMemoryTodoPromiseService } from \"./services/inmemory-todo-promise-service\";\n\nexport class App {\n  constructor() {\n    this.appName = \"Todo List\";\n    this.todoTitle = \"\";\n    this.activeFilter = \"all\";\n    this.todoService = new InMemoryTodoPromiseService();\n    this.filterTodos(this.activeFilter);\n  }\n\n  get allTodosCount() {\n    return this.todoService.filterTodosSync(\"all\").length;\n  }\n\n  get activeTodosCount() {\n    return this.todoService.filterTodosSync(\"active\").length;\n  }\n\n  get completedTodosCount() {\n    return this.todoService.filterTodosSync(\"completed\").length;\n  }\n\n  filterTodos(filterCriteria) {\n    this.activeFilter = filterCriteria;\n    this.todos = this.todoService.filterTodosSync(this.activeFilter);\n  }\n  addTodo() {\n    this.todoService\n      .addTodo(new Todo(this.todoTitle, false))\n      .then(addedTodo => {\n        this.todoTitle = \"\";\n        console.log(addedTodo);\n        this.todoService.filterTodos(this.activeFilter).then(todos => {\n          this.todos = todos;\n        });\n      });\n  }\n\n  removeTodo(todo) {\n    this.todoService\n      .deleteTodoById(todo.id)\n      .then(deletedTodo => {\n        console.log(deletedTodo);\n        this.todoService.filterTodos(this.activeFilter).then(todos => {\n          this.todos = todos;\n        });\n      })\n      .catch(error => {\n        console.log(\"ERROR: \" + error);\n      });\n  }\n\n  updateTodo(todo) {\n    if (todo.editMode) {\n      todo.editMode = false;\n      this.todoService.updateTodoById(todo.id, todo).then(updatedTodo => {\n        console.log(updatedTodo);\n      });\n    } else {\n      todo.editMode = true;\n    }\n  }\n\n  checkIfAllTodosAreCompleted() {\n    return this.todos.every(todo => todo.completed);\n  }\n\n  toggleAllTodos() {\n    this.todoService.toggleAllTodos().then(result => {\n      if (result) {\n        this.filterTodos(this.activeFilter);\n      }\n    });\n  }\n\n  completeAllTodos() {\n    this.todoService.completeAllTodos().then(result => {\n      if (result) {\n        this.checkIfAllTodosAreCompleted();\n        this.filterTodos(this.activeFilter);\n      }\n    });\n  }\n\n  removeAllTodos() {\n    this.todoService.removeAllTodos().then(result => {\n      if (result) {\n        this.filterTodos(this.activeFilter);\n      }\n    });\n  }\n\n  removeCompletedTodos() {\n    this.todoService.removeCompletedTodos().then(result => {\n      if (result) {\n        this.filterTodos(this.activeFilter);\n      }\n    });\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { IdGenerator } from \"../utils/idgenerator\";\r\n\r\nexport class Todo {\r\n  constructor(title, completed = false) {\r\n    this.id = IdGenerator.getNextId();\r\n    this.title = title;\r\n    this.completed = completed;\r\n  }\r\n}\r\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class InMemoryTodoService {\r\n  todos = [];\r\n\r\n  constructor() {}\r\n\r\n  getAllTodos() {\r\n    return this.todos;\r\n  }\r\n\r\n  getTodoById(id) {\r\n    return this.todos.filter(todo => todo.id === id).pop();\r\n  }\r\n\r\n  addTodo(todo) {\r\n    this.todos.push(todo);\r\n    return this;\r\n  }\r\n\r\n  deleteTodoById(id) {\r\n    this.todos = this.todos.filter(todo => todo.id !== id);\r\n    return this;\r\n  }\r\n\r\n  updateTodoById(id, values = {}) {\r\n    let todo = this.getTodoById(id);\r\n    if (!todo) {\r\n      return null;\r\n    }\r\n    Object.assign(todo, values);\r\n    return todo;\r\n  }\r\n\r\n  filterTodos(filterCriteria) {\r\n    switch (filterCriteria) {\r\n      case \"active\":\r\n        return this.todos.filter(t => !t.completed);\r\n      case \"completed\":\r\n        return this.todos.filter(t => t.completed);\r\n      case \"all\":\r\n      default:\r\n        return this.todos;\r\n    }\r\n  }\r\n\r\n  toggleAllTodos() {\r\n    this.todos.forEach(t => (t.completed = !t.completed));\r\n  }\r\n\r\n  completeAllTodos() {\r\n    this.todos.forEach(t => (t.completed = true));\r\n  }\r\n\r\n  removeAllTodos() {\r\n    this.todos.splice(0);\r\n  }\r\n\r\n  removeCompletedTodos() {\r\n    this.todos = this.todos.filter(todo => !todo.completed);\r\n  }\r\n}\r\n","class _IdGenerator {\r\n  constructor() {\r\n    this.id = 0;\r\n  }\r\n\r\n  getNextId() {\r\n    return ++this.id;\r\n  }\r\n}\r\n\r\nexport let IdGenerator = new _IdGenerator();\r\n","export class InMemoryTodoPromiseService {\r\n  constructor() {\r\n    this.todos = [];\r\n    this.latency = 100;\r\n    this.isRequesting = false;\r\n  }\r\n\r\n  getAllTodos() {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        resolve(this.todos);\r\n        this.isRequesting = false;\r\n      }, this.latency);\r\n    });\r\n  }\r\n\r\n  getTodoById(id) {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        let found = this.todos.filter(todo => todo.id === id).pop();\r\n        resolve(JSON.parse(JSON.stringify(found)));\r\n        this.isRequesting = false;\r\n      }, this.latency);\r\n    });\r\n  }\r\n\r\n  addTodo(todo) {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        let instance = JSON.parse(JSON.stringify(todo));\r\n        this.todos.push(todo);\r\n        this.isRequesting = false;\r\n        resolve(instance);\r\n      }, this.latency);\r\n    });\r\n  }\r\n\r\n  deleteTodoById(id) {\r\n    this.isRequesting = true;\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        this.getTodoById(id)\r\n          .then(deletedTodo => {\r\n            throw new Error(\"Simulating an error\");\r\n            this.todos = this.todos.filter(todo => todo.id !== id);\r\n            this.isRequesting = false;\r\n            resolve(deletedTodo);\r\n          })\r\n          .catch(ex => {\r\n            reject(ex);\r\n          });\r\n      }, this.latency);\r\n    });\r\n  }\r\n\r\n  updateTodoById(id, values = {}) {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        this.getTodoById(id).then(updatedTodo => {\r\n          Object.assign(updatedTodo, values);\r\n          this.isRequesting = false;\r\n          resolve(updatedTodo);\r\n        });\r\n      }, this.latency);\r\n    });\r\n  }\r\n\r\n  toggleTodoCompleted(todo) {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        this.updateTodoById(todo.id, {\r\n          completed: !todo.completed\r\n        }).then(updatedTodo => {\r\n          this.isRequesting = false;\r\n          resolve(updatedTodo);\r\n        });\r\n      }, this.latency);\r\n    });\r\n  }\r\n\r\n  filterTodosSync(filterCriteria) {\r\n    switch (filterCriteria) {\r\n      case \"active\":\r\n        return this.todos.filter(t => !t.completed);\r\n      case \"completed\":\r\n        return this.todos.filter(t => t.completed);\r\n      case \"all\":\r\n      default:\r\n        return this.todos;\r\n    }\r\n  }\r\n  filterTodos(filterCriteria) {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        switch (filterCriteria) {\r\n          case \"active\":\r\n            resolve(this.todos.filter(t => !t.completed));\r\n            break;\r\n          case \"completed\":\r\n            resolve(this.todos.filter(t => t.completed));\r\n            break;\r\n          case \"all\":\r\n          default:\r\n            resolve(this.todos);\r\n        }\r\n        this.isRequesting = false;\r\n      }, this.latency);\r\n    });\r\n  }\r\n\r\n  toggleAllTodos() {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        this.todos.forEach(t => (t.completed = !t.completed));\r\n        resolve(true);\r\n        this.isRequesting = false;\r\n      }, this.latency);\r\n    });\r\n  }\r\n\r\n  completeAllTodos() {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        this.todos.forEach(t => (t.completed = true));\r\n        resolve(true);\r\n        this.isRequesting = false;\r\n      }, this.latency);\r\n    });\r\n  }\r\n\r\n  removeAllTodos() {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        this.todos.splice(0);\r\n        resolve(true);\r\n        this.isRequesting = false;\r\n      }, this.latency);\r\n    });\r\n  }\r\n\r\n  removeCompletedTodos() {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        this.todos = this.todos.filter(todo => !todo.completed);\r\n        resolve(true);\r\n        this.isRequesting = false;\r\n      }, this.latency);\r\n    });\r\n  }\r\n}\r\n","$padding: 10px;\r\n\r\nul {\r\n  padding-left: $padding;\r\n}\r\n\r\nli {\r\n  list-style-type: none;\r\n}\r\n\r\n.strikeOut {\r\n  text-decoration: line-through;\r\n}\r\n"],"sourceRoot":".."}